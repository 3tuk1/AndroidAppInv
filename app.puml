@startuml

' Model
'
class Product {
    -productId: int
    -productName: String
    -price: int
    -quantity: int
    -location: String
    -expirationDate: LocalDate
    -purchaseDate: LocalDate
    -imagePath: String
    -categoryId: int
    -barcodeNumber: int
}
class Barcode {
    -barcodeId: int
    -barcodeNumber: int
}
class ProductCategory {
    -categoryId: int
    -categoryName: String
}

class History {
    -historyId: int
    -productName: String
    -type: String ' add, consume, discard
    -date: LocalDate
    -quantity: int
}
class Analysis {
    -productName: String
    -priorityScore: float
    -recommendedQuantity: int
    -remainingDays: float
    -outOfStockDate: LocalDate
}
class ShoppingList {
    -listId: int
    -priority: int
    -productName: String
    -quantity: int
}

Product "*" -- "*" Barcode
Product "*" -- "*" ProductCategory

' Repository
class ProductRepository {
    +updateProduct(product Product)
    +deleteProduct(product Product)
    +addProduct(String productName, int price, int quantity,
    String location, LocalDate expirationDate, LocalDate purchaseDate,
    String imagePath, int categoryId, int barcodeNumber)
}
Product "*" -- "1" ProductRepository
Barcode "*" -- "1" ProductRepository
ProductCategory "*" -- "1" ProductRepository

class HistoryRepository {
    +updateHistory(History history)
    +addHistory(String productName, String type, LocalDate date, int quantity)
    +deleteHistory(History history)
}
Product "*" -- "1" HistoryRepository
History "*" -- "1" HistoryRepository

class AnalysisRepository {
    +addAnalysis(String productName)
    +deleteAnalysis(Analysis analysis)
    +updateAnalysis(Analysis analysis)
}
Analysis "*" -- "1" AnalysisRepository

class ShoppingListRepository {
    +addShoppingList(String productName, int quantity)
    +removeFromShoppingList(int listId)
    +exportShoppingList()
    +getShoppingList()
    +setShoppingList(ShoppingList shoppingList)

}
ShoppingList "*" -- "1" ShoppingListRepository

'View Model
class ProductEditViewModel{
    -xmlLiveData
    +onInputComplete()
    +onDelete(int productId)
    -onQuantityChanged(String productName, int quantity, String type)
}
ProductRepository "1" -- "1" ProductEditViewModel
ProductEditFragmentView "1" -- "1" ProductEditViewModel

class HistoryUseCase{
    +addHistory()
    +deleteHistory()
    +exportHistory()
}
class ShoppingListUseCase {
    +addShoppingList(String productName, int quantity)
    +removeFromShoppingList(int priority)
    +exportShoppingList()
}
ProductEditViewModel "1" -- "1" HistoryUseCase

class NavigationBarViewModel{
    +navigateToHome()
    +navigateToSavings()
    +navigateToSettings()
    +navigateToAnalysis()
}
NavigationBarViewModel "1" -- "1" HomeView
NavigationBarViewModel "1" -- "1" SavingsView
NavigationBarViewModel "1" -- "1" SettingsView
NavigationBarViewModel "1" -- "1" AnalysisView

class CameraViewModel{
    +startCameraPhoto()
    +startCameraBarcode()
}
CameraViewModel "1" -- "1" CameraPhotoView
CameraViewModel "1" -- "1" CameraBarcodeReaderView

class ConsumptionAnalysisUseCase {
    +addAnalysisInfo()
    +calculatePriorityScore()
    +calculateRecommendedPurchase()
    +predictRemainingDays()
    +predictOutOfStock()
    -notifyIfLowDays()
}
ConsumptionAnalysisUseCase "1" -- "*" ShoppingListUseCase
ShoppingListUseCase "1" -- "1" ShoppingListRepository
AnalysisRepository "1" -- "1" ConsumptionAnalysisUseCase

' View
class ProductItemFragmentView{
    -productId: int
    -productName: String
    -quantity: int
    -location: String
    -expirationDate: String
    -purchaseDate: String
    +onLongPressDelete()
    +onShortPressEdit()
}
class ProductEditFragmentView{
    -productId: int
    -productName : String
    -quantity: int
    -location: String
    -expirationDate: String
    -barcode: int
    -image: Bitmap[]
    -categoryId: int
    +inputProductName()
    +inputLocation()
    +inputExpirationDate()
    +inputImage()
    +inputCategory()
    +inputQuantity()
}

class NavigationBarView{
    +homeButton()
    +savingsButton()
    +settingsButton()
    +analysisButton()
}
NavigationBarView "1" -- "1" NavigationBarViewModel

class AddButtonView{
    +addProductButton()
    +startCameraButton()
}
AddButtonView "1" -- "1" CameraViewModel

class CalendarView{
    +select()
    +nextWeek()
    +switchMonth()
}
class PieChartView{
    -totalMoney
    -inputMoney
    -outputMoney
    -lostMoney
}

class SavingsViewModel {
    +getPieChartData()
    +updatePieChart()
}

class SavingsView{
}
SavingsView -- SavingsViewModel
SavingsViewModel -- PieChartView

class SettingsViewModel {
}
class SettingsView{
}
SettingsView -- SettingsViewModel

class AnalysisViewModel {
    +getHistoryList()
    +getShoppingList()
}
class AnalysisView{
}
AnalysisView -- AnalysisViewModel
AnalysisViewModel -- CalendarView

class HomeViewModel {
    +getProductList()
    +sort()
}
class HomeView{
    -showProductList()
    -sortFunction()
}
HomeView -- HomeViewModel
HomeViewModel -- ProductItemFragmentView
HomeViewModel -- AddButtonView
HomeViewModel -- NavigationBarView

class CameraPhotoView{
    -takePhoto()
}
class CameraBarcodeReaderView{
    -readBarcode()
}
class CameraInitView {
    +initCamera()
}
CameraPhotoView "1" -- "1" CameraInitView
CameraBarcodeReaderView "1" -- "1" CameraInitView

class PieChartDataUseCase{
    +createPieChartData()
    +updatePieChartData()
}
SavingsViewModel -- PieChartDataUseCase
HistoryRepository -- PieChartDataUseCase

class CalendarDataRegisterUseCase{
    +registerHistoryToCalendar()
    +registerPredictionToCalendar()
}
AnalysisViewModel -- CalendarDataRegisterUseCase
AnalysisRepository -- CalendarDataRegisterUseCase
AnalysisView -- CalendarView
SavingsView -- PieChartView

@enduml